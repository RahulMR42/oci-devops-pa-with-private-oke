version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  # these are local variables to the build config
  variables:

  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
  #  EXAMPLE_SECRET: "YOUR-SECRET-OCID"
  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this Build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
    #Variable to export and use with in further stages.

inputArtifacts:
  - name: kubectl
    type: GENERIC_ARTIFACT
    # artifactid: "ocid1.genericartifact.oc1.us-sanjose-1.0.amaaaaaayat6pyaa45q7pl6ewukfsb4rhbjzuqwne52xsgma6woqzzrjseva"
    registryid: "ocid1.artifactrepository.oc1.us-sanjose-1.0.amaaaaaayat6pyaan2jhs6bprfub4ugqwcpsmged6xxeath5hi6qzdcn5znq"
    path: kubectl
    version: 1.24.0
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubectl

steps:
  - type: Command
    timeoutInSeconds: 6000
    name: "Setup Kubernetes Access"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}
      oci ce cluster create-kubeconfig --cluster-id ${OCI_OKE_OCID} --file kube_config --region ${OCI_REGION} --token-version 2.0.0  --kube-endpoint PRIVATE_ENDPOINT
      export KUBECONFIG=./kube_config
      ./kubectl get nodes


    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root


#outputArtifacts:
#  - name: sample_python_fastap_image
#    type: DOCKER_IMAGE
#    # this location tag doesn't effect the tag used to deliver the container image
#    # to the Container Registry
#    location: sample_python_fastap_image:latest